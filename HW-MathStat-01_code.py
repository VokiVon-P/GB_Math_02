
#%%
import numpy as np
from math import factorial

# сачетание 
def combinations(n:int, k:int)->int:
    return int(factorial(n) / (factorial(k) * factorial(n - k)))

# размещение - порядок важен
def arrangements(n:int, k:int)->int:
    return int(factorial(n) / factorial(n - k))

# перестановка - комбинаторика
def permutations(n:int)->int:
    return int(factorial(n))

#%% [markdown]
# ### Задание 1
#%% [markdown]
# Из колоды в 52 карты извлекаются случайным образом 4 карты. 
# a) Найти вероятность того, что все карты – крести. 
# б) Найти вероятность, что среди 4-х карт окажется хотя бы один туз.

#%% [markdown]
# ##### Задание 1 - общая часть:
#%%
# Общее пространство возможных событий
c1_all = combinations(52, 4)
print(f"Общее количество возможный комбинаций С1(all) = {c1_all}")
#%% [markdown]
# ##### Задание 1 - часть а)
# Найти вероятность того, что все карты – крести. 
#%%
# Количество карт одной масти в колоде из 52/4 = 13 карт
c1_tref = combinations(13, 4)
p1_a = c1_tref/c1_all
print(f"Вероятность P(a) = {p1_a}")

#%% [markdown]
# ##### Задание 1 - часть b)
# Найти вероятность, что среди 4-х карт окажется хотя бы один туз.
#%%
# Данная задача будет состоять из комбинации задач
# 1) - 1 туз и 3 прочие
# 2) - 2 туза и 2 прочие
# 3) - 3 туза и 1 прочая
# 4) - 4 туза

# считаем комбинации тузов из 4 карт и прочих из 52-4 = 48
c1_b1 = combinations(4, 1)*combinations(48, 3)
print(f"Комбинаций 1 туз  = {c1_b1}")
c1_b2 = combinations(4, 2)*combinations(48, 2)
print(f"Комбинаций 2 туза = {c1_b2}")
c1_b3 = combinations(4, 3)*combinations(48, 1)
print(f"Комбинаций 3 туза = {c1_b3}")
c1_b4 = combinations(4, 4)*combinations(48, 0)
print(f"Комбинаций 4 туза = {c1_b4}")
# слоажим комбинации и вычислим вероятность
p1_b = (c1_b1 + c1_b2 + c1_b3 + c1_b4)/c1_all
print(f"Вероятность, что среди 4-х карт окажется хотя бы один туз P(b) = {p1_b}")

#%% [markdown]
# #### Задание 2
# На входной двери подъезда установлен кодовый замок, содержащий десять кнопок с цифрами от 0 до 9. Код содержит три цифры, которые нужно нажать одновременно. Какова вероятность того, что человек, не знающий код, откроет дверь с первой попытки?

#%% [markdown]
# Задача 2 - на сочетание
# Общее пространство возможных событий

#%%
# цифр 10 выбираем любые 3
c2_all = combinations(10, 3)
print(f"Кол-во комбинаций С = {c2_all}")

#%% [markdown]
# Попытка 1. Следовательно: 

#%%
p2 = 1/c2_all
print(f"Вероятность P = {p2}")

#%% [markdown]
# ### Задание 3
# В ящике имеется 15 деталей, из которых 9 окрашены. 
# Рабочий случайным образом извлекает 3 детали. 
# Какова вероятность того, что все извлеченные детали окрашены?
#%%
# Общее пространство возможных событий
c3_all = combinations(15, 3)
print(f"Общее количество возможный комбинаций С3(all) = {c3_all}")
c3_fill = combinations(9, 3)
p3_fill = c3_fill/c3_all
print(f"Вероятность P3_fill = {p3_fill}")

p3_a = 9/15
p3_b = 8/14
p3_c = 7/13
p3_depend  = p3_a*p3_b*p3_c
print(f"Вероятность P3_link = {p3_depend}")




#%% [markdown]
# ### Задание 4
# В лотерее 100 билетов. 
# Из них 2 выигрышных. 
# Какова вероятность того, что 2 приобретенных билета окажутся выигрышными?
#%%
c4_all = combinations(100, 2)
print(f"Общее количество возможный комбинаций С4(all) = {c4_all}")
# комбинаций 2 билетов и 2 выигрышных = 1
# следовательно:
p4 = 1/c4_all
print(f"Вероятность того, что 2 приобретенных билета окажутся выигрышными P4 = {p4}")


#%%
